// <auto-generated />
using ExaminationWDACF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExaminationWDACF.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240116035120_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExaminationWDACF.Models.Account", b =>
                {
                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.HasKey("AccountNo");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountNo = "A1",
                            AccountName = "Nick",
                            Balance = 10000m,
                            PinCode = "123",
                            Role = true
                        },
                        new
                        {
                            AccountNo = "A2",
                            AccountName = "Alex",
                            Balance = 1200m,
                            PinCode = "123",
                            Role = false
                        },
                        new
                        {
                            AccountNo = "A3",
                            AccountName = "Andy",
                            Balance = 35000m,
                            PinCode = "123",
                            Role = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

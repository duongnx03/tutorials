// <auto-generated />
using Exam1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam1.Migrations
{
    [DbContext(typeof(BookDbContext))]
    partial class BookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exam1.Models.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "O001",
                            Author = "DuongK",
                            PublishedDate = "2023-12-11",
                            Title = "HiHi"
                        },
                        new
                        {
                            Id = "O002",
                            Author = "TriLor",
                            PublishedDate = "2023-12-12",
                            Title = "HeHe"
                        },
                        new
                        {
                            Id = "O003",
                            Author = "DienLor",
                            PublishedDate = "2023-12-13",
                            Title = "HaHa"
                        });
                });

            modelBuilder.Entity("Exam1.Models.BookDetails", b =>
                {
                    b.Property<string>("BookId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("BookDetails");

                    b.HasData(
                        new
                        {
                            BookId = "O001",
                            Genre = "Comic",
                            Price = 10
                        },
                        new
                        {
                            BookId = "O002",
                            Genre = "Story",
                            Price = 30
                        },
                        new
                        {
                            BookId = "O003",
                            Genre = "Comic",
                            Price = 18
                        });
                });

            modelBuilder.Entity("Exam1.Models.BookDetails", b =>
                {
                    b.HasOne("Exam1.Models.Book", "Book")
                        .WithMany("BookDetails")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Exam1.Models.Book", b =>
                {
                    b.Navigation("BookDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
